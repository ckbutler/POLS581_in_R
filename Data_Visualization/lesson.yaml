### REMEMBER: Try to think like someone who's terrified of math and 
###           doesn't know why the hell they're being asked to do this crap. 

- Class: meta
  Course: Swirl Lessons
  Lesson: Data Visualization 
  Author: David Nunnally
  Type: Standard
  Organization: University of New Mexico
  Version: 2.4.3

- Class: text
  Output: "In this lesson, you will learn how to visualize patterns in your data using the ggplot2 package."

- Class: cmd_question
  Output: "To begin, you need to load the ggplot2 library."
  CorrectAnswer: library(ggplot2)
  AnswerTests: any_of_exprs('library(ggplot2)')
  Hint: "Type 'library(ggplot2)' without quotation marks. If you have not already, you can install ggplot2 using 'install.packages'."
  
- Class: text
  Output: "ggplot2 is based on the grammar of graphics, which is the idea that you can build every graph from the same
          components -- a data set, a coordinate system, and geoms (visual marks that represent data points). While the type
          of graph may change, each one derives from the same three essential parts."
          
- Class: cmd_question
  Output: "Let's start by making a blank graph. Type ggplot(world, aes(world$democ11))."
  CorrectAnswer: ggplot(world, aes(world$democ11))
  AnswerTests: any_of_exprs('ggplot(world, aes(world$democ11))')
  Hint: "Type ggplot(world, aes(world$democ11)). You could even copy and paste it!"
  
- Class: text
  Output: "Now you have created a blank graph. Look at this like a canvas; once you have set up your coordinates and data, 
          you can decide what type of graph you want to make and which geoms to add to it. 
          Notice that even though you specified your data (world) and your variable of interest (democ11), 
          ggplot does not assume that you wanted to make a graph. You need to specify that you want to add data points."

- Class: cmd_question
  Output: "Let's turn that blank graph into a histogram. Take your previous command and add '+ geom_histogram()'
          to the end."
  CorrectAnswer: ggplot(world, aes(world$democ11)) + geom_histogram()
  AnswerTests: any_of_exprs('ggplot(world, aes(world$democ11)) + geom_histogram()')
  Hint: "Remember not to use quotation marks. You can use the up arrow to recall your previous command."
 
- Class: text
  Output: "Look at the x axis of the histogram. Its break points are 0.0, 2.5, 5.0, 7.5, and 10.0. These points
          illustrate potential democracy scores that countries could have, while break points on the y axis
          indicate how many countries have those scores."
          
- Class: text
  Output: "You can make a histogram and other plots using commands other than ggplot, and some of which are much simpler.
          However, ggplot allows you to control more about the graph itself."

- Class: cmd_question
  Output: "For example, let's change the bin width of the x axis so that the graph looks less messy 
          (observe the spacing between 3 and 5, for example). In the 'geom_histogram()' part of your command, 
          add 'breaks=seq(0, 10, by=1)'."
  CorrectAnswer: ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=1))
  AnswerTests: any_of_exprs('ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=1))')
  Hint: "Remember not to use quotation marks. You can use the up arrow to recall your previous command."
  
- Class: text
  Output: "In the breaks specification above, '0, 10' indicates that you would like to graph values between 
          0 and 10. 'by=1' indicates that you would like the bars (bins) to reflect every integer between 0 and 10." 

- Class: cmd_question
  Output: "For additional practice, repeat the previous command using 'by=2'."
  CorrectAnswer: ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=2))
  AnswerTests: any_of_exprs('ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=2))')
  Hint: "From your previous command, change 'by=1' to 'by=2'. Remember not to use quotation marks."
  
- Class: text
  Output: "Observe that you now have five bars (bins) instead of ten. This means that two bins have been added
          together and each bin has a higher total. On one hand, this specification has made the graph simpler
          to read, which could be helpful for some purposes. On the other hand, less bins means that you have lost
          information. This new graph cannot illustrate the difference between democracy scores of 0 and 1.
          Be careful and mindful when specifying the number of bins."

- Class: cmd_question
  Output: "This graph lacks color... let's make the bins blue! Change the number of bins back to 10,
          and add 'fill=blue' (with blue in quotation marks) to the 'geom_histogram' part of your command. Don't forget to add a comma."
  CorrectAnswer: ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=1), fill="blue")
  AnswerTests: any_of_exprs('ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=1), fill="blue")')
  Hint: "Type ggplot(world, aes(world$democ11)) +
             geom_histogram(breaks=seq(0, 10, by=1), fill=blue). Blue needs to be in quotation marks."

- Class: cmd_question
  Output: "You can also delineate each bin by outlining them in another color. Let's use red. After specifying
          your fill color (blue), specify your outline color using 'col=red' (with red in quotation marks)."
  CorrectAnswer: ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=1), fill="blue", col="red")
  AnswerTests: any_of_exprs('ggplot(world, aes(world$democ11)) + geom_histogram(breaks=seq(0, 10, by=1), fill="blue", col="red")')
  Hint: "Type ggplot(world, aes(world$democ11)) +
        geom_histogram(breaks=seq(0, 10, by=1), fill=blue, col=red). Put the names of colors in quotation marks."

- Class: text
  Output: "The 'col=' specification can be used to change the color of other graphs as well. While color printing
          for research papers may be unnecessary, adding color can make your graphics 'pop' when presenting research
          at conferences."

- Class: cmd_question
  Output: "Histograms are not the only way to visualize data for one variable. Kernel density plots can be more
          useful when you have continuous variables. Set up the ggplot command like a histogram, but add 
          'geom_density' at the end instead of 'geom_histogram'. Use the variable 'cialifex' instead of 'democ11'." 
  CorrectAnswer: ggplot(world, aes(world$cialifex)) + geom_density()
  AnswerTests: any_of_exprs('ggplot(world, aes(world$cialifex)) + geom_density()')
  Hint: "Remember to change the variable from 'democ11' to 'cialifex'."
  
- Class: text
  Output: "Unlike the histogram, the kernel density plot outputs a probability distribution for each x value on
          the y axis. For countries' average life expectancy, the most likely value falls between 75 and 77."

- Class: cmd_question
  Output: "Finally, we're ready to move on to scatter plots. These graphs plot the relationship between two 
          (often continuous) variables. Let's start with a blank graph to illustrate what this means. Type
          'ggplot(world, aes(x=gdp_10_thou, y=durable))'."
  CorrectAnswer: ggplot(world, aes(x=gdp_10_thou, y=durable))
  AnswerTests: any_of_exprs('ggplot(world, aes(x=gdp_10_thou, y=durable))')
  Hint: "Type ggplot(world, aes(x=gdp_10_thou, y=durable)). Remember not to use quotation marks."

- Class: text
  Output: "On the blank graph, the x axis plots GDP per capita in 10k US dollars; the y axis plots how many
          years a country has consistently been a democracy. By plotting both variables, we can determine whether
          a pattern between them exists."

- Class: cmd_question
  Output: "Modify the blank graph by adding '+ geom_point()' to the end."
  CorrectAnswer: ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point()
  AnswerTests: any_of_exprs('ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point()')
  Hint: "Remember not to use quotation marks. You can use the up arrow to recall your previous command."

- Class: cmd_question
  Output: "Sometimes relationships can be hard to identify from scatter plots. We can plot a line of best fit
          to make the relationship more transparent. Add '+ geom_smooth(method=lm)' to the end 
          of your previous command. lm needs to be in quotation marks."
  CorrectAnswer: ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point() + geom_smooth(method="lm")
  AnswerTests: any_of_exprs('ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point() + geom_smooth(method="lm")')
  Hint: "You can use the up arrow to recall your previous command."

- Class: text
  Output: "Specifying 'method=lm' indicates that you want a linear model as your line of best fit. The ggplot2
          package comes with many other options that you can use if you feel that a linear model is not
          appropriate. The gray bands illustrate the confidence interval. You can remove the bands by adding
          'se=FALSE' inside geom_smooth()."

- Class: cmd_question
  Output: "Last but not least, all graphs should have a title to tell readers what they are looking at. This can
          be done using labs(). Add '+ labs(title=This is a title)' to the end of your previous command.
          'This is a title' needs to be in quotation marks."
  CorrectAnswer: ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point() + geom_smooth(method="lm") + labs(title="This is a title")
  AnswerTests: any_of_exprs('ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point() + geom_smooth(method="lm") + labs(title="This is a title")')
  Hint: "You can use the up arrow to recall your previous command."

- Class: cmd_question
  Output: "The handy labs() function can also change your variables' labels on the x and y axises to make them
          more descriptive. Inside the function, add 'x=GDP per capita (10k US), y=Years democratic'.
          Your new label names need to be in quotation marks."
  CorrectAnswer: ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point() + geom_smooth(method="lm") + labs(title="This is a title", x="GDP per capita (10K US)", y="Years democratic")
  AnswerTests: any_of_exprs('ggplot(world, aes(x=gdp_10_thou, y=durable)) + geom_point() + geom_smooth(method="lm") + labs(title="This is a title", x="GDP per capita (10K US)", y="Years democratic")')
  Hint: "You can use the up arrow to recall your previous command."

- Class: text
  Output: "Well that was arduous! This lesson covered the basics of data visualization, including histograms,
          kernel density plots, scatter plots, how to change the title and labels, how to change scaling,
          and how to change colors, among other things. R can do so much more -- some of which you will learn
          later on. You can also read ahead; many individuals have uploaded useful visualization tutorials
          online."
          
- Class: video
  Output: Would you like to read ahead on data visualization?
  VideoLink: http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html
